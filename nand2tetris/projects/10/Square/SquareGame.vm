<tokens><keyword> class </keyword>
<keyword> SquareGame </keyword>
<keyword> { </keyword>
<keyword> field </keyword>
<keyword> Square </keyword>
<keyword> square; </keyword>
<keyword> field </keyword>
<keyword> int </keyword>
<keyword> direction; </keyword>
<keyword> constructor </keyword>
<keyword> SquareGame </keyword>
<keyword> new() </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> square </keyword>
<keyword> = </keyword>
<keyword> Square.new(0, </keyword>
<keyword> 0, </keyword>
<keyword> 30); </keyword>
<keyword> let </keyword>
<keyword> direction </keyword>
<keyword> = </keyword>
<keyword> 0; </keyword>
<keyword> return </keyword>
<keyword> this; </keyword>
<keyword> } </keyword>
<keyword> method </keyword>
<keyword> void </keyword>
<keyword> dispose() </keyword>
<keyword> { </keyword>
<keyword> do </keyword>
<keyword> square.dispose(); </keyword>
<keyword> do </keyword>
<keyword> Memory.deAlloc(this); </keyword>
<keyword> return; </keyword>
<keyword> } </keyword>
<keyword> method </keyword>
<keyword> void </keyword>
<keyword> moveSquare() </keyword>
<keyword> { </keyword>
<keyword> if </keyword>
<keyword> (direction </keyword>
<keyword> = </keyword>
<keyword> 1) </keyword>
<keyword> { </keyword>
<keyword> do </keyword>
<keyword> square.moveUp(); </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (direction </keyword>
<keyword> = </keyword>
<keyword> 2) </keyword>
<keyword> { </keyword>
<keyword> do </keyword>
<keyword> square.moveDown(); </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (direction </keyword>
<keyword> = </keyword>
<keyword> 3) </keyword>
<keyword> { </keyword>
<keyword> do </keyword>
<keyword> square.moveLeft(); </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (direction </keyword>
<keyword> = </keyword>
<keyword> 4) </keyword>
<keyword> { </keyword>
<keyword> do </keyword>
<keyword> square.moveRight(); </keyword>
<keyword> } </keyword>
<keyword> do </keyword>
<keyword> Sys.wait(5); </keyword>
<keyword> return; </keyword>
<keyword> } </keyword>
<keyword> method </keyword>
<keyword> void </keyword>
<keyword> run() </keyword>
<keyword> { </keyword>
<keyword> var </keyword>
<keyword> char </keyword>
<keyword> key; </keyword>
<keyword> var </keyword>
<keyword> boolean </keyword>
<keyword> exit; </keyword>
<keyword> let </keyword>
<keyword> exit </keyword>
<keyword> = </keyword>
<keyword> false; </keyword>
<keyword> while </keyword>
<keyword> (~exit) </keyword>
<keyword> { </keyword>
<keyword> while </keyword>
<keyword> (key </keyword>
<keyword> = </keyword>
<keyword> 0) </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> key </keyword>
<keyword> = </keyword>
<keyword> Keyboard.keyPressed(); </keyword>
<keyword> do </keyword>
<keyword> moveSquare(); </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (key </keyword>
<keyword> = </keyword>
<keyword> 81) </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> exit </keyword>
<keyword> = </keyword>
<keyword> true; </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (key </keyword>
<keyword> = </keyword>
<keyword> 90) </keyword>
<keyword> { </keyword>
<keyword> do </keyword>
<keyword> square.decSize(); </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (key </keyword>
<keyword> = </keyword>
<keyword> 88) </keyword>
<keyword> { </keyword>
<keyword> do </keyword>
<keyword> square.incSize(); </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (key </keyword>
<keyword> = </keyword>
<keyword> 131) </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> direction </keyword>
<keyword> = </keyword>
<keyword> 1; </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (key </keyword>
<keyword> = </keyword>
<keyword> 133) </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> direction </keyword>
<keyword> = </keyword>
<keyword> 2; </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (key </keyword>
<keyword> = </keyword>
<keyword> 130) </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> direction </keyword>
<keyword> = </keyword>
<keyword> 3; </keyword>
<keyword> } </keyword>
<keyword> if </keyword>
<keyword> (key </keyword>
<keyword> = </keyword>
<keyword> 132) </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> direction </keyword>
<keyword> = </keyword>
<keyword> 4; </keyword>
<keyword> } </keyword>
<keyword> while </keyword>
<keyword> (~(key </keyword>
<keyword> = </keyword>
<keyword> 0)) </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> key </keyword>
<keyword> = </keyword>
<keyword> Keyboard.keyPressed(); </keyword>
<keyword> do </keyword>
<keyword> moveSquare(); </keyword>
<keyword> } </keyword>
<keyword> } </keyword>
<keyword> return; </keyword>
<keyword> }} </keyword>
</tokens>
