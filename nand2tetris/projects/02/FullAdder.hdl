// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // Hypothesis:
    //   carry == 1, when
    //   carryab is 1, or
    //   sumab & c
    // Proof:
    //   a + b = sumab(carry, sum)
    //   1 + 1 = 10
    //   0 + 1 = 01
    //   1 + 0 = 01
    //   0 + 0 = 00
    
    //   sumab + c = sumabc(carry, sum)
    //   10 + 00 = 10
    //   01 + 00 = 01
    //   01 + 00 = 01
    //   00 + 00 = 00
    //   10 + 01 = 11
    //   01 + 01 = 10
    //   01 + 01 = 10
    //   00 + 01 = 01

    // Solution A
    // HalfAdder(a=a, b=b, sum=sumab, carry=carryab);  
    // And(a=sumab, b=c, out=carryalternative);
    // Or(a=carryab, b=carryalternative, out=carry);
    // Xor(a=sumab, b=c, out=sum);

    // Solution B (textbook speaks of using two HalfAdders and one simple logic gate)
    HalfAdder(a=a, b=b, sum=sumab, carry=carryab);
    HalfAdder(a=sumab, b=c, sum=sum, carry=carrysumabc);
    Or(a=carryab, b=carrysumabc, out=carry);
}