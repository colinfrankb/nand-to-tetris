CHIP IsZero {
    IN in[16];
    OUT out;

    PARTS:
    // Iterate through the bit-array, comparing two bits at a time,
    // where the output of the two bits before is carried over and compared
    // to the next bit in the bit-array.
    // The final result will discern if any bit in the bit-array is a 1, which
    // means the input is not zero
    Or(a=in[0], b=in[1], out=out01);
    Or(a=out01, b=in[2], out=out012);
    Or(a=out012, b=in[3], out=out0123);
    Or(a=out0123, b=in[4], out=out01234);
    Or(a=out01234, b=in[5], out=out012345);
    Or(a=out012345, b=in[6], out=out0123456);
    Or(a=out0123456, b=in[7], out=out01234567);
    Or(a=out01234567, b=in[8], out=out012345678);
    Or(a=out012345678, b=in[9], out=out0123456789);
    Or(a=out0123456789, b=in[10], out=out012345678910);
    Or(a=out012345678910, b=in[11], out=out01234567891011);
    Or(a=out01234567891011, b=in[12], out=out0123456789101112);
    Or(a=out0123456789101112, b=in[13], out=out012345678910111213);
    Or(a=out012345678910111213, b=in[14], out=out01234567891011121314);
    Or(a=out01234567891011121314, b=in[15], out=outisnotzero);
    Not(in=outisnotzero, out=out);
}